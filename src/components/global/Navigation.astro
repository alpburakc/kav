---
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import { getLangFromUrl, getUrlWithoutLang, useTranslations, useTranslatedPath } from "@i18n/utils";

const isDev = import.meta.env.DEV;

const lang = getLangFromUrl(Astro.url);
const path = getUrlWithoutLang(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

let pages = [
	{
		title: t("board.title"),
		url: "/board/",
	},
	// {
	// 	title: "Services",
	// 	url: "/services",
	// },
	{
		title: t("blog.title"),
		url: "/blog/",
	},
	{
		title: t("contacts"),
		url: "/contact/",
	},
];

// if (isDev) {
// 	pages.push({
// 		title: "Overview",
// 		url: "/system/overview",
// 	});
// }

const { pathname } = Astro.url;
---

<header>
	<a href={translatePath("/")} aria-label="Home" class="logo absolute z-50 flex h-[4.5rem] items-center md:h-[5.9rem]">
		<svg xmlns="http://www.w3.org/2000/svg" 
     viewBox="-20 -20 627.77 229.972" 
     class="h-10 w-auto text-black" 
     aria-label="KAV logo">
  <path d="M27.208,116.975l-20.873-12.051L0,81.656l12.055-20.881,20.641-5.531-5.591-20.536,12.122-20.996,23.318-6.148,20.87,12.049,20.756,76.739-76.964,20.623ZM9.762,102.284l18.011,10.398,71.49-19.156-19.277-71.274-18.014-10.4-20.114,5.303-10.456,18.109,6.208,22.804-22.919,6.141-10.394,18.003,5.465,20.071Z" fill="currentColor"></path>
  <path d="M140.94,182.407l-20.87-12.049-20.756-76.739,76.964-20.623,20.873,12.051,6.335,23.269-12.056,20.881-20.641,5.531,5.591,20.536-12.122,20.996-23.318,6.148ZM123.5,167.719l18.014,10.4,20.114-5.303,10.456-18.109-6.209-22.804,22.92-6.141,10.395-18.003-5.465-20.071-18.011-10.398-71.491,19.156,19.278,71.274Z" fill="currentColor"></path>
  <path d="M101.874,97.563l-56.341-56.341v-24.102L62.516,0h24.111l15.11,15.11L116.727,0h24.243l16.983,17.121v24.099l-56.08,56.344ZM49.532,39.565l52.334,52.335,52.086-52.332v-20.8l-14.649-14.768h-20.911l-16.644,16.778-16.779-16.778h-20.788l-14.649,14.768v20.797Z" fill="currentColor"></path>
  <path d="M140.97,189.972h-24.111l-15.11-15.11-14.99,15.11h-24.243l-16.983-17.121v-24.099l56.08-56.344,56.341,56.341v24.102l-16.983,17.121ZM118.516,185.972h20.788l14.649-14.768v-20.797l-52.334-52.335-52.086,52.332v20.8l14.649,14.768h20.911l16.644-16.778,16.779,16.778Z" fill="currentColor"></path>
  <path d="M176.194,116.756l-76.835-20.395,20.623-76.964,20.873-12.051,23.319,6.148,12.056,20.881-5.531,20.641,20.58,5.426,12.122,20.996-6.335,23.269-20.87,12.05ZM104.26,93.524l71.364,18.942,18.014-10.4,5.465-20.071-10.456-18.109-22.853-6.025,6.141-22.919-10.394-18.003-20.115-5.303-18.011,10.398-19.156,71.491Z" fill="currentColor"></path>
  <path d="M62.631,182.625l-23.319-6.148-12.056-20.881,5.531-20.641-20.58-5.426L.086,108.534l6.334-23.269,20.87-12.05,76.836,20.395-20.623,76.964-20.873,12.051ZM41.943,173.034l20.115,5.303,18.011-10.398,19.156-71.491-71.364-18.942-18.014,10.4-5.464,20.071,10.456,18.109,22.853,6.025-6.141,22.919,10.394,18.003Z" fill="currentColor"></path>
  <path d="M271.99,131.677l-11.642,11.85v27.649h-39.498V16.924h39.498v80.868l40.33-39.291h46.774l-46.774,48.229,50.724,64.445h-47.814l-31.599-39.499Z" fill="currentColor"></path>
  <path d="M456.593,108.602v62.574h-36.796v-14.553c-5.613,10.811-16.839,16.424-33.262,16.424-27.025,0-41.993-15.176-41.993-34.718,0-20.788,15.176-33.677,50.101-33.677h22.452c-.624-11.434-8.315-17.879-23.907-17.879-10.811,0-22.867,3.742-30.56,9.771l-13.305-26.817c12.89-8.523,32.015-13.097,49.685-13.097,36.588,0,57.585,16.215,57.585,51.971ZM417.095,135.003v-9.771h-17.047c-12.681,0-17.255,4.574-17.255,11.434,0,6.652,5.405,11.435,14.76,11.435,8.731,0,16.424-4.158,19.542-13.098Z" fill="currentColor"></path>
  <path d="M587.77,58.501l-46.566,112.675h-40.746l-46.358-112.675h40.538l27.025,68.811,28.48-68.811h37.627Z" fill="currentColor"></path>
</svg>
	</a>
	<div data-xdata="{ open: false }" class="navigation fixed right-0 top-0 z-50" data-xbind.class="{'w-full navbar-open': open}">
		<div class="ml-auto md:max-w-fit" data-xbind.class="{'max-w-3xl': open, 'max-w-[8rem]': !open }">
			<div class="mx-auto w-full">
				<div
					class="shadow-thick resizable nav-container squircle relative mx-auto flex w-full flex-col justify-center overflow-x-hidden bg-zinc-900 backdrop-blur-xl backdrop-filter md:flex-row-reverse">
					<div class="flex flex-row items-center justify-end md:hidden">
						<a class="px-3 py-[0.4rem] pl-4" href={translatePath("/contact/")} aria-label="Contact Page">
							<Icon class="text-white" name="octicon:mail-16" width="20" data-xbind.class="{'hidden': open}" />
						</a>
						<button
							data-xon.click="open = !open"
							data-xbind.style="{'padding-top': open ? '1rem' : '0.4rem'}"
							aria-label="Open navbar"
							class="inline-flex items-center justify-center px-3 py-[0.4rem] pr-4 text-white hover:text-blue-300 focus:text-white focus:outline-none">
							<svg class="h-6 w-6" stroke="currentColor" fill="none" viewBox="0 0 24 24">
								<path
									data-xbind.class="{'hidden': open, 'inline-flex': !open }"
									class="inline-flex"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h16M4 18h16">
								</path>
								<path
									data-xbind.class="{'hidden': !open, 'inline-flex': open }"
									class="hidden"
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M6 18L18 6M6 6l12 12">
								</path>
							</svg>
						</button>
					</div>
					<nav data-xbind.class="{'flex': open, 'hidden': !open}" class="hidden flex-grow flex-col justify-center py-12 md:flex md:py-0">
						<ul
							class="flex list-none flex-col items-end justify-center gap-2 px-2 text-center text-3xl md:flex-row md:items-center md:text-base">
							{
								pages.map((page) => (
									<li data-cursor-hover>
										<a
											href={translatePath(page.url)}
											class={`inline-block cursor-pointer px-1 py-[0.33rem] ${
												page.url === pathname ||
												page.url === pathname.replace(/^\/it|\/$/, "") ||
												(page.url === "/blog" && (pathname.startsWith("/blog") || pathname.startsWith("/it/blog")))
													? "active"
													: ""
											}`}>
											<span class="menu-item-container inline-block">
												<span class="menu-item px-4 py-1 font-semibold uppercase tracking-wide text-zinc-400 hover:text-white focus:text-white focus:shadow-none focus:outline-none">
													{page.title}
												</span>
											</span>
										</a>
									</li>
								))
							}
							<li>
								<a href={translatePath(path, `${lang === "en" ? "tr" : "en"}`)} class="inline-block cursor-pointer px-1 py-[0.33rem]">
									<span class="menu-item-container inline-block">
										<span
											class="menu-item px-4 py-1 font-semibold uppercase tracking-wide text-zinc-400 hover:text-white focus:text-white focus:shadow-none focus:outline-none">
											{lang === "en" ? "tr" : "en"}
										</span>
									</span>
								</a>
							</li>
						</ul>
					</nav>
				</div>
			</div>
		</div>
	</div>
</header>

<style>
	.navigation {
		mix-blend-mode: difference;
	}
	.navigation.navbar-open {
		mix-blend-mode: luminosity;
	}
	.navigation,
	.logo {
		padding: 1rem var(--base-padding-x);
	}
	@media (min-width: 768px) {
		.navigation,
		.logo {
			padding: 2rem var(--base-padding-x);
		}
	}
	.resizable:before {
		content: "|";
		position: absolute;
		left: 0.4rem;
		top: 0.36rem;
		font-size: 12px;
		line-height: 23px;
		color: #8e8e8e;
		opacity: 0;
		text-shadow: 4px 0 #8e8e8e;
		transition: all 0.5s ease;
	}
	.collapsed .resizable:before {
		opacity: 1;
	}
	nav a .menu-item-container {
		border-radius: 0.45rem;
	}
	nav a.active .menu-item-container,
	nav a:hover .menu-item-container {
		transition: background-color 0.3s ease;
	}
	nav ul:not(.collapsed) a.active .menu-item-container {
		transition-duration: 0.5s;
		background: #aaa;
	}
	nav ul:not(.collapsed) a:hover .menu-item-container {
		background: #fff;
	}
	nav ul:not(.collapsed) a.active .menu-item-container .menu-item,
	nav ul:not(.collapsed) a:hover .menu-item-container .menu-item {
		color: #000;
	}
	nav ul.collapsed a.active .menu-item-container .menu-item,
	nav ul.collapsed a:hover .menu-item-container .menu-item {
		color: #fff;
	}
</style>

<script>
	import { gsap } from "gsap";
	import { ScrollTrigger } from "gsap/ScrollTrigger";
	import { DrawSVGPlugin } from "gsap/DrawSVGPlugin";

	gsap.registerPlugin(DrawSVGPlugin, ScrollTrigger);

	function init() {
		gsap.timeline({
			defaults: {
				duration: 1,
				ease: "power2.out",
			},
		})
			.from(".logo-svg path", { drawSVG: 0 })
			.to(".logo-svg path", { fill: "#000", duration: 2 }, "<+=0.5");

		let isHoveringMenu = false;
		let menuCollapsed = false;

		const pageLinksUl = document.querySelector("header .nav-container nav ul");

		if (!pageLinksUl) {
			return;
		}

		let menuCollapseTl = gsap
			.timeline({
				defaults: {
					ease: "back.inOut(1.7)",
					duration: 0.4,
				},
				paused: true,
				onStart: () => {
					pageLinksUl.classList.add("collapsed");
				},
			})
			.to("header .nav-container", { width: 125 })
			.to(
				pageLinksUl,
				{
					x: () => {
						const pathName = window.location.pathname;

						if (pathName === "/" || pathName === "/it/") {
							return "9.5rem";
						} else if (pathName.startsWith("/blog") || pathName.startsWith("/it/blog")) {
							return "3.5rem";
						}

						return "-3.5rem";
					},
				},
				"<",
			);

		const isTouchDevice = window.matchMedia("(hover: none)").matches;

		if (window.innerWidth >= 768 && !isTouchDevice) {
			function expandMenu() {
				menuCollapseTl.reverse();
				pageLinksUl?.classList.remove("collapsed");
				document.querySelector("header .navigation")?.classList.remove("collapsed");
				menuCollapsed = false;
			}

			function collapseMenu() {
				if (window.scrollY > 200) {
					menuCollapseTl.play();
					pageLinksUl?.classList.add("collapsed");
					document.querySelector("header .navigation")?.classList.add("collapsed");
					menuCollapsed = true;
				}
			}

			collapseMenu();

			const navContainer = document.querySelector(".nav-container") as HTMLElement;

			function mouseEnterHandler() {
				isHoveringMenu = true;
				expandMenu();
			}

			function mouseLeaveHandler() {
				isHoveringMenu = false;
				collapseMenu();
			}

			function handleScroll() {
				if (window.scrollY > 200 && !isHoveringMenu && !menuCollapsed) {
					collapseMenu();
				} else if (window.scrollY <= 200 && menuCollapsed) {
					expandMenu();
				}
			}

			navContainer?.removeEventListener("mouseenter", mouseEnterHandler);
			navContainer?.addEventListener("mouseenter", mouseEnterHandler);

			navContainer?.removeEventListener("mouseleave", mouseLeaveHandler);
			navContainer?.addEventListener("mouseleave", mouseLeaveHandler);

			window?.removeEventListener("scroll", handleScroll);
			window?.addEventListener("scroll", handleScroll);
		}
	}

	document.removeEventListener("DOMContentLoaded", init); // astro:page-load
	document.addEventListener("DOMContentLoaded", init); // astro:page-load
</script>
